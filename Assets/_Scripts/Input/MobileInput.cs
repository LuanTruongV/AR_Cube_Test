//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/_Scripts/Input/MobileInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MobileInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MobileInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MobileInput"",
    ""maps"": [
        {
            ""name"": ""Touch"",
            ""id"": ""8dac653f-faae-4088-b328-2f4c982a9ce0"",
            ""actions"": [
                {
                    ""name"": ""Tap"",
                    ""type"": ""Button"",
                    ""id"": ""d48d2dbb-4abb-47f1-90f7-58ae93cf01d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondTouch"",
                    ""type"": ""Button"",
                    ""id"": ""81b0515a-bac8-47e6-8864-9ac1b63163a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPostion"",
                    ""type"": ""Value"",
                    ""id"": ""c7e4150e-64b4-41a2-b26f-e208cafcdc8f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchDelta"",
                    ""type"": ""Value"",
                    ""id"": ""74205751-1a19-4102-b37a-be85d2b1d2d5"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondPostion"",
                    ""type"": ""Value"",
                    ""id"": ""3c0c8994-c64a-434f-a1d3-5a1a7f4ffd2d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondDelta"",
                    ""type"": ""Value"",
                    ""id"": ""f06608ea-c62e-4bcc-bb9f-be6b836a9010"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FirstPostion"",
                    ""type"": ""Value"",
                    ""id"": ""dc542ede-9246-4730-8f3f-464d243f7595"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FirstDelta"",
                    ""type"": ""Value"",
                    ""id"": ""76768ecf-9e74-428b-bf71-b0e744c7a309"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""38e1ce74-86e3-4c10-be52-2305ab8fcf4d"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed6741b3-b0f3-423e-845f-c234a3831f49"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPostion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""802e7d7d-ef73-45dd-94b7-59d9e2159fd9"",
                    ""path"": ""<Touchscreen>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""042efdac-045b-402f-8082-e62c4df4df5b"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b6ef664-17e6-4bef-a65a-4a68764754df"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondPostion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""154920ba-4e6d-460c-aa2d-1e0c613aa10b"",
                    ""path"": ""<Touchscreen>/touch1/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19d6d4de-71e2-4255-9300-8b5c579cdbef"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstPostion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6333ec7-fca4-4755-8247-ad48bfd6a9d0"",
                    ""path"": ""<Touchscreen>/touch0/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Touch
        m_Touch = asset.FindActionMap("Touch", throwIfNotFound: true);
        m_Touch_Tap = m_Touch.FindAction("Tap", throwIfNotFound: true);
        m_Touch_SecondTouch = m_Touch.FindAction("SecondTouch", throwIfNotFound: true);
        m_Touch_TouchPostion = m_Touch.FindAction("TouchPostion", throwIfNotFound: true);
        m_Touch_TouchDelta = m_Touch.FindAction("TouchDelta", throwIfNotFound: true);
        m_Touch_SecondPostion = m_Touch.FindAction("SecondPostion", throwIfNotFound: true);
        m_Touch_SecondDelta = m_Touch.FindAction("SecondDelta", throwIfNotFound: true);
        m_Touch_FirstPostion = m_Touch.FindAction("FirstPostion", throwIfNotFound: true);
        m_Touch_FirstDelta = m_Touch.FindAction("FirstDelta", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Touch
    private readonly InputActionMap m_Touch;
    private List<ITouchActions> m_TouchActionsCallbackInterfaces = new List<ITouchActions>();
    private readonly InputAction m_Touch_Tap;
    private readonly InputAction m_Touch_SecondTouch;
    private readonly InputAction m_Touch_TouchPostion;
    private readonly InputAction m_Touch_TouchDelta;
    private readonly InputAction m_Touch_SecondPostion;
    private readonly InputAction m_Touch_SecondDelta;
    private readonly InputAction m_Touch_FirstPostion;
    private readonly InputAction m_Touch_FirstDelta;
    public struct TouchActions
    {
        private @MobileInput m_Wrapper;
        public TouchActions(@MobileInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Tap => m_Wrapper.m_Touch_Tap;
        public InputAction @SecondTouch => m_Wrapper.m_Touch_SecondTouch;
        public InputAction @TouchPostion => m_Wrapper.m_Touch_TouchPostion;
        public InputAction @TouchDelta => m_Wrapper.m_Touch_TouchDelta;
        public InputAction @SecondPostion => m_Wrapper.m_Touch_SecondPostion;
        public InputAction @SecondDelta => m_Wrapper.m_Touch_SecondDelta;
        public InputAction @FirstPostion => m_Wrapper.m_Touch_FirstPostion;
        public InputAction @FirstDelta => m_Wrapper.m_Touch_FirstDelta;
        public InputActionMap Get() { return m_Wrapper.m_Touch; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TouchActions set) { return set.Get(); }
        public void AddCallbacks(ITouchActions instance)
        {
            if (instance == null || m_Wrapper.m_TouchActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TouchActionsCallbackInterfaces.Add(instance);
            @Tap.started += instance.OnTap;
            @Tap.performed += instance.OnTap;
            @Tap.canceled += instance.OnTap;
            @SecondTouch.started += instance.OnSecondTouch;
            @SecondTouch.performed += instance.OnSecondTouch;
            @SecondTouch.canceled += instance.OnSecondTouch;
            @TouchPostion.started += instance.OnTouchPostion;
            @TouchPostion.performed += instance.OnTouchPostion;
            @TouchPostion.canceled += instance.OnTouchPostion;
            @TouchDelta.started += instance.OnTouchDelta;
            @TouchDelta.performed += instance.OnTouchDelta;
            @TouchDelta.canceled += instance.OnTouchDelta;
            @SecondPostion.started += instance.OnSecondPostion;
            @SecondPostion.performed += instance.OnSecondPostion;
            @SecondPostion.canceled += instance.OnSecondPostion;
            @SecondDelta.started += instance.OnSecondDelta;
            @SecondDelta.performed += instance.OnSecondDelta;
            @SecondDelta.canceled += instance.OnSecondDelta;
            @FirstPostion.started += instance.OnFirstPostion;
            @FirstPostion.performed += instance.OnFirstPostion;
            @FirstPostion.canceled += instance.OnFirstPostion;
            @FirstDelta.started += instance.OnFirstDelta;
            @FirstDelta.performed += instance.OnFirstDelta;
            @FirstDelta.canceled += instance.OnFirstDelta;
        }

        private void UnregisterCallbacks(ITouchActions instance)
        {
            @Tap.started -= instance.OnTap;
            @Tap.performed -= instance.OnTap;
            @Tap.canceled -= instance.OnTap;
            @SecondTouch.started -= instance.OnSecondTouch;
            @SecondTouch.performed -= instance.OnSecondTouch;
            @SecondTouch.canceled -= instance.OnSecondTouch;
            @TouchPostion.started -= instance.OnTouchPostion;
            @TouchPostion.performed -= instance.OnTouchPostion;
            @TouchPostion.canceled -= instance.OnTouchPostion;
            @TouchDelta.started -= instance.OnTouchDelta;
            @TouchDelta.performed -= instance.OnTouchDelta;
            @TouchDelta.canceled -= instance.OnTouchDelta;
            @SecondPostion.started -= instance.OnSecondPostion;
            @SecondPostion.performed -= instance.OnSecondPostion;
            @SecondPostion.canceled -= instance.OnSecondPostion;
            @SecondDelta.started -= instance.OnSecondDelta;
            @SecondDelta.performed -= instance.OnSecondDelta;
            @SecondDelta.canceled -= instance.OnSecondDelta;
            @FirstPostion.started -= instance.OnFirstPostion;
            @FirstPostion.performed -= instance.OnFirstPostion;
            @FirstPostion.canceled -= instance.OnFirstPostion;
            @FirstDelta.started -= instance.OnFirstDelta;
            @FirstDelta.performed -= instance.OnFirstDelta;
            @FirstDelta.canceled -= instance.OnFirstDelta;
        }

        public void RemoveCallbacks(ITouchActions instance)
        {
            if (m_Wrapper.m_TouchActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITouchActions instance)
        {
            foreach (var item in m_Wrapper.m_TouchActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TouchActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TouchActions @Touch => new TouchActions(this);
    public interface ITouchActions
    {
        void OnTap(InputAction.CallbackContext context);
        void OnSecondTouch(InputAction.CallbackContext context);
        void OnTouchPostion(InputAction.CallbackContext context);
        void OnTouchDelta(InputAction.CallbackContext context);
        void OnSecondPostion(InputAction.CallbackContext context);
        void OnSecondDelta(InputAction.CallbackContext context);
        void OnFirstPostion(InputAction.CallbackContext context);
        void OnFirstDelta(InputAction.CallbackContext context);
    }
}
